rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Reglas para la colección 'users'
    match /users/{userId} {
      // Cualquiera puede leer la información pública de un usuario
      allow read: if true;
      // Solo el propio usuario o un admin puede crear, actualizar o eliminar su perfil.
      allow write: if request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Reglas para la colección 'professionalsDetails'
    match /professionalsDetails/{profId} {
        allow read: if true;
        allow create: if (request.auth.uid == profId) || (request.auth != null && request.resource.data.keys().hasOnly(['avgRating', 'totalReviews']));
        allow update: if
            request.auth.uid == profId ||
            (request.auth != null &&
            request.resource.data.diff(resource.data).affectedKeys().hasOnly(['avgRating', 'totalReviews']));
        allow delete: if request.auth.uid == profId;
    }
    
    // Reglas para la colección 'reviews'
    match /reviews/{reviewId} {
        // Cualquiera puede leer las reseñas
        allow read: if true;
        // Solo un usuario autenticado puede crear una reseña
        allow create: if request.auth != null;
        // El autor de la reseña o un admin pueden actualizarla o eliminarla
        allow update, delete: if resource.data.userId == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Reglas para la colección 'adBanners'
    match /adBanners/{bannerId} {
      // Cualquiera puede leer los banners
      allow read: if true;
      // Solo los administradores pueden crear, actualizar o eliminar banners
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Reglas para la colección 'jobRequests'
    match /jobRequests/{jobId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if request.auth.uid == resource.data.clientId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow delete: if request.auth.uid == resource.data.clientId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
