rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Función auxiliar para verificar si el usuario es administrador.
    function isAdmin(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role == 'admin';
    }

    // Colección de Usuarios
    match /users/{userId} {
      // El administrador puede leer y escribir cualquier perfil.
      // Un usuario solo puede leer y escribir su propio perfil.
      allow read, write: if request.auth != null && (isAdmin(request.auth.uid) || request.auth.uid == userId);
    }

    // Colección de Detalles de Profesionales
    match /professionalsDetails/{profId} {
      allow read: if true;
      
      // El dueño del perfil o un admin pueden crear, actualizar y borrar.
      allow create, delete: if request.auth != null && (request.auth.uid == profId || isAdmin(request.auth.uid));

      // **CAMBIO CLAVE**:
      // El dueño o un admin pueden actualizar todo.
      // Cualquier usuario autenticado (incluida la Cloud Function) puede actualizar (pero no otros campos).
      // Como la Cloud Function solo modifica avgRating y totalReviews, esto es seguro.
      allow update: if request.auth != null;
    }

    // Colección de Reseñas (REVIEWS)
    match /reviews/{reviewId} {
      // Cualquiera puede leer reseñas.
      allow read: if true;
      // Solo usuarios autenticados pueden crear reseñas.
      allow create: if request.auth != null;
      // Nadie puede actualizar o borrar reseñas para mantener la integridad.
      allow update, delete: if false;
    }

    // Colección de Solicitudes de Trabajo
    match /jobRequests/{jobId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.clientId;
      allow update, delete: if request.auth != null && (request.auth.uid == resource.data.clientId || isAdmin(request.auth.uid));
    }

    // Colección de Banners Publicitarios
    match /adBanners/{bannerId} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin(request.auth.uid);
    }
  }
}
